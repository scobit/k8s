# kubectl config location
~/.kube/config

# get help
kubectl --help
kubectl subcommand --help

# check components status
kubectl get componentstatus

# get cluster info
kubectl cluster-info

# get nodes
kubectl get nodes|node|no

# get pods
kubectl get pods|pod|po

# configutarion in linux
echo "export PATH=$PATH:/kubernetes/" >> etc/bash.bashrc
exit
login

# change label node to worker
kubectl label node NodeName node-role.kubernetes.io/worker=

# get kubectl client version
kubectl version --client

# delete pod
kubectl delete pods PodName

# delete all pods
kubectl delete pods --all

# get detail information about pod
kubectl describe pods PodName

# create pod
kubectl run hello --generator=run-pod/v1 --image=httpd:ImageName --port=80
kubectl run hello  --image=adv4000/k8sphp:latest --port=80


# launch shell command in pod
kubectl exec PodName date
kubectl exec PodName -- date

# launch shell from pod
kubectl exec -it hello sh

# get pod logs
kubectl logs PodName

# port forward for pod
kubectl port-forward PodName 5555:80

# create deployment from file
kubectl apply -f front.yaml

# delete deploymetn from file
kubectl delete -f front.yaml

# get deployments 
kubectl get deployments|deployment|deploy

# create deployment 
kubectl create deployment front --image serfisar/uap:latest

# add replicas
kubectl scale deployment alex --replicas 4

# get replicaset
kubectl get rs

# make autoscale for deployment
kubectl autoscale dempoyment deploymentName --min=4 --max=6 --cpu-percent=80  

# get hpa - horizontal pod autoscaler
kubectl get hpa

# 
kubectl rollout history deployment/depName

#
kubectl rollout status deployment/depName

# --record deprecated
kubectl set image deployment/depName k8sphp=adv/k8sphp:version1 --record

# back to previous version
kubectl rollout undo deployment/depName

# back to specific version
kubectl rollout undo deployment/depName --to-revision=2

# deploy latest version
kubectl rollout restart deployment/depName

# delete all deployment
kubectl delete deployment --all

# get services
kubectl get services|svc

# expose port ClusterIP - IP только внутри K8S cluster (default)
kubectl expose deployment alex --type=ClusterIP --port 80
kubectl expose pod alex --type=ClusterIP --port 80

# expose port NodePort - определённый порт на всех k8s worker nodes
kubectl expose deployment alex --type=NodePort --port 80

# delete service
kubectl delete service ServiceName

# External name - DNS CNAME Record

# describe nodes
kubectl describe nodes | grep ExternalIP


# not working try kubectl expose service find info 
kubectl expose deployment alex --type=ExternalName --port 80


# LoadBalancer - только в cloud Clusters (aws, gcp, sazure)
kubectl expose deployment alex --type=LoadBalancer --port 80
