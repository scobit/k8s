# kubectl config location
~/.kube/config

состоит из 4 секций.
список кластеров
список контекстов
текущий контекст
список пользователей

# переопределить расположение config 
export KUBECONFIG=/path/file

# вариант с несколькими конфигами
export KUBECONFIG=/path/file:/path2/file2


# добавление кластера в конфиг через команду
kubectl config set-cluster MyClusterName --server=https://k8s.com:8443 --certificate-authority=path_to_file/cafile

# добавление пользователя в конфиг
kubectl config set-credentials temp --username=temp --password=my_password

# добавление пользователя в конфиг с токеном
kubectl config set-credentials temp --token=my_token

# добавление контекста в конфиг
kubectl config set-context some-context --cluster=My_Cluster --user=temp --namespace=some_namespace

# show current context
kubectl config current-context

# show all contexts
kubectl config get-contexts

# change context
kubectl use-context NameOfContext

# show all clusters
kubectl config get-clusters

# show all users
kubectl config get-users

# delete context
kubectl config delete-context some-context

# get help
kubectl --help
kubectl subcommand --help

# get cluster info
kubectl cluster-info

# configutarion in linux
echo "export PATH=$PATH:/kubernetes/" >> etc/bash.bashrc
exit
login

# change label node to worker
kubectl label node NodeName node-role.kubernetes.io/worker=

# get kubectl client version
kubectl version --client

# create pod
kubectl run hello --generator=run-pod/v1 --image=httpd:ImageName --port=80
kubectl run hello  --image=adv4000/k8sphp:latest --port=80

# create deployment 
kubectl create deployment front --image serfisar/uap:latest

# add replicas
kubectl scale deployment alex --replicas 4

# make autoscale for deployment
kubectl autoscale dempoyment deploymentName --min=4 --max=6 --cpu-percent=80  

# 
kubectl rollout history deployment/depName

#
kubectl rollout status deployment/depName

# --record deprecated
kubectl set image deployment/depName k8sphp=adv/k8sphp:version1 --record

# back to previous version
kubectl rollout undo deployment/depName

# back to specific version
kubectl rollout undo deployment/depName --to-revision=2

# deploy latest version
kubectl rollout restart deployment/depName

# expose port ClusterIP - IP только внутри K8S cluster (default)
kubectl expose deployment alex --type=ClusterIP --port 80
kubectl expose pod alex --type=ClusterIP --port 80

# expose port NodePort - определённый порт на всех k8s worker nodes
kubectl expose deployment alex --type=NodePort --port 80

# not working try kubectl expose service find info 
kubectl expose deployment alex --type=ExternalName --port 80

# LoadBalancer - только в cloud Clusters (aws, gcp, sazure)
kubectl expose deployment alex --type=LoadBalancer --port 80
